scalar Timestamp

enum ScheduleType {
  BREAK
  SCHEDULED
  STARTED
  PAUSED
  FINISH
}

type ScheduleData {
  id: ID!
  year: Int!
  month: Int!
  date: Int!
  beforeTime: Timestamp!
  start: Timestamp!
  breakTime: Int!
  workoutTimes: Timestamp!
  type: ScheduleType!
}

input CreateScheduleDataInput {
  year: Int!
  month: Int!
  date: Int!
  beforeTime: Timestamp!
  start: Timestamp!
  breakTime: Int!
  workoutTimes: Timestamp!
  type: ScheduleType!
}

input UpdateScheduleDataInput {
  id: ID!
  year: Int!
  month: Int!
  date: Int!
  beforeTime: Timestamp!
  start: Timestamp!
  breakTime: Int!
  workoutTimes: Timestamp!
  type: ScheduleType!
}

input TargetDateInput {
  year: Int!
  month: Int!
  date: Int!
}

type Query {
  getScheduleById(id: ID!): ScheduleData
  getScheduleByDate(year: Int!, month: Int!, date: Int!): [ScheduleData!]
  getScheduleStatusByDate(year: Int!, month: Int!): [String]
}

type Mutation {
  createSchedule(schedule: CreateScheduleDataInput): ScheduleData
  updateSchedule(schedule: UpdateScheduleDataInput): ScheduleData
  deleteSchedule(id: ID!): ScheduleData
  cloneSchedule(id: ID!, targetDate: TargetDateInput): ScheduleData
}
